# Render Blueprint for Zipsea Monorepo
# This file manages all services: backend (prod/staging) and frontend (prod/staging)
# Render automatically detects which service to deploy based on rootDir changes

services:
  # ===========================================
  # BACKEND SERVICES
  # ===========================================
  
  # Production Backend
  - type: web
    name: zipsea-backend-production
    runtime: node
    region: oregon
    plan: starter
    branch: production
    rootDir: backend
    buildCommand: npm ci --production=false
    startCommand: npm run start
    healthCheckPath: /api/v1/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3001
      - key: DATABASE_URL
        fromDatabase:
          name: zipsea-db-prod
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: zipsea-redis-prod
          type: redis
          property: connectionString
      - key: CORS_ORIGIN
        value: https://zipsea-frontend-production.onrender.com
    autoDeploy: true

  # Staging Backend
  - type: web
    name: zipsea-backend-staging
    runtime: node
    region: oregon
    plan: starter
    branch: main
    rootDir: backend
    buildCommand: npm ci --production=false
    startCommand: npm run start
    healthCheckPath: /api/v1/health
    envVars:
      - key: NODE_ENV
        value: staging
      - key: PORT
        value: 3001
      - key: DATABASE_URL
        fromDatabase:
          name: zipsea-db-staging
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: zipsea-redis-staging
          type: redis
          property: connectionString
      - key: CORS_ORIGIN
        value: https://zipsea-frontend-staging.onrender.com
    autoDeploy: true

  # ===========================================
  # FRONTEND SERVICES
  # ===========================================
  
  # Production Frontend
  - type: web
    name: zipsea-frontend-production
    runtime: node
    region: oregon
    plan: starter
    branch: production
    rootDir: frontend
    buildCommand: npm ci && npm run build
    startCommand: npm run start
    healthCheckPath: /
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: NEXT_PUBLIC_API_URL
        value: https://zipsea-backend-production.onrender.com/api/v1
      - key: NEXT_PUBLIC_ENVIRONMENT
        value: production
      - key: NEXT_PUBLIC_SITE_URL
        value: https://zipsea-frontend-production.onrender.com
    autoDeploy: true

  # Staging Frontend
  - type: web
    name: zipsea-frontend-staging
    runtime: node
    region: oregon
    plan: starter
    branch: main
    rootDir: frontend
    buildCommand: npm ci && npm run build
    startCommand: npm run start
    healthCheckPath: /
    envVars:
      - key: NODE_ENV
        value: staging
      - key: PORT
        value: 3000
      - key: NEXT_PUBLIC_API_URL
        value: https://zipsea-backend-staging.onrender.com/api/v1
      - key: NEXT_PUBLIC_ENVIRONMENT
        value: staging
      - key: NEXT_PUBLIC_SITE_URL
        value: https://zipsea-frontend-staging.onrender.com
    autoDeploy: true

# ===========================================
# DATABASES (Already Exist)
# ===========================================
databases:
  - name: zipsea-db-prod
    plan: starter
    region: oregon
    
  - name: zipsea-db-staging
    plan: starter
    region: oregon

# ===========================================
# REDIS INSTANCES (Already Exist)
# ===========================================
# Note: Redis services are already created and will be referenced
# by the backend services using fromService connections
